1
00:00:00,666 --> 00:00:05,611
This is an explanation video for
an Algorithm to play the board

2
00:00:05,635 --> 00:00:09,635
game "Codenames", written
by Michael and Asaf Kali.

3
00:00:09,659 --> 00:00:13,359
Part 1: The board game Codenames

4
00:00:13,359 --> 00:00:16,674
Let's first describe the game.

5
00:00:16,788 --> 00:00:21,871
In the game, two groups are competing eachother
- The blue team and the red team

6
00:00:21,871 --> 00:00:26,397
In each group there are two types
of players: The Spymaster, and the

7
00:00:26,421 --> 00:00:31,061
field operatives, which are often played
by multiple people

8
00:00:31,488 --> 00:00:34,920
On the board there are
25 cards, each one with a

9
00:00:34,920 --> 00:00:36,420
word witten on in.

10
00:00:36,987 --> 00:00:41,837
Some cards represent blue agents,
and some represent red agents.

11
00:00:42,270 --> 00:00:47,787
one represents a black Assassin, and the
others represent innocent gray Bystanders.

12
00:00:48,073 --> 00:00:52,373
but only the two Spymasters
hold the map that tells which

13
00:00:52,373 --> 00:00:55,190
card is assigned to which team.

14
00:00:55,690 --> 00:01:01,907
The goal of the Spymasters is to
have all the cards of their color exposed

15
00:01:02,256 --> 00:01:07,263
to do so, in each turn the Spymaster
chooses some of the cards of his color

16
00:01:07,263 --> 00:01:08,846
to hint about.

17
00:01:08,846 --> 00:01:13,130
He then hint about them with a
single word, that somehow relates

18
00:01:13,213 --> 00:01:18,013
to each of them, and adds the
number of cards he is hinting about

19
00:01:18,213 --> 00:01:26,565
Then, the field operatives guess which
cards did the Spymaster hint about.

20
00:01:26,589 --> 00:01:31,469
with each guess, The true color
of the card is being revealed.

21
00:01:31,493 --> 00:01:35,493
Even when the Field
Operators guess a card from the

22
00:01:35,517 --> 00:01:39,757
correct color, the Spymaster
may not give away if that

23
00:01:39,781 --> 00:01:42,681
was the card he hinted about or not.

24
00:01:42,993 --> 00:01:47,073
The Spymaster can try to
hint at many cards at once, but

25
00:01:47,097 --> 00:01:51,337
if the Field Operators accidentally
choose a card from the

26
00:01:51,361 --> 00:01:54,801
opponent’s color or a
Bystander's gray card,

27
00:01:54,825 --> 00:01:56,575
they loose their turn

28
00:01:58,301 --> 00:02:03,661
If they hit the black Assassin’s
card - The team immediately looses.

29
00:02:03,685 --> 00:02:07,845
On the screen, the blue
guesser mistakes "costume" as

30
00:02:07,869 --> 00:02:12,189
a hint for "ninja", and the
blue team looses since

31
00:02:12,213 --> 00:02:14,213
"ninja" is the black Assassin.

32
00:02:14,385 --> 00:02:16,551
Part 2: The Word2Vec Model

33
00:02:16,575 --> 00:02:21,375
The Algorithm in discussion
uses a pre-trained Word2Vec model

34
00:02:21,399 --> 00:02:23,899
for it's linguistic knowledge.

35
00:02:23,923 --> 00:02:29,683
The Word2Vec model uses a big text
corpus such as Wikipedia or news sites

36
00:02:29,707 --> 00:02:34,907
to assign each word in the
vocabulary with an n-dimensional vector

37
00:02:34,931 --> 00:02:40,771
The vectors of the various words are
designed such that words that tend to

38
00:02:40,795 --> 00:02:46,155
appear in the same context will
have small angle between them, while

39
00:02:46,179 --> 00:02:51,059
distant, unrelated words will
have a larger angle between them.

40
00:02:55,779 --> 00:02:58,363
Part 3: The Codenames Algorithm

41
00:02:58,387 --> 00:03:01,587
Now we will describe
the algorithm itself

42
00:03:01,611 --> 00:03:05,691
To see the problem from
the algorithm's perspective,

43
00:03:05,715 --> 00:03:09,635
We will visualize the cards
words as 3 dimensional

44
00:03:09,659 --> 00:03:11,659
unit vectors in a 3-d space.

45
00:03:12,387 --> 00:03:16,707
In each turn, the first task
of the hinter is to find a

46
00:03:16,731 --> 00:03:20,651
proper subset of words
(usually two to four words)

47
00:03:20,675 --> 00:03:22,275
on which to hint

48
00:03:22,299 --> 00:03:25,739
Two methods of clustering
where implemented.

49
00:03:25,763 --> 00:03:31,763
In the first clustering method, the
words are considered as nodes in a graph

50
00:03:31,787 --> 00:03:36,267
with edges weights correlated
to their cosine similarity.

51
00:03:36,291 --> 00:03:42,611
This graph is divided into communities
using the Louvain SNA algorithm, and each

52
00:03:42,635 --> 00:03:47,755
community is taken as an optional
cluster of words to hint about in the next step.

53
00:03:47,779 --> 00:03:52,819
The cluster are represented here
as groups of connected vectors.

54
00:03:53,779 --> 00:03:59,779
A second, "greedy" method, simply
iterates over all combinations of words to

55
00:03:59,803 --> 00:04:01,483
choose the best one.

56
00:04:01,507 --> 00:04:06,307
The second task of the hinter
is to choose a hinting word for

57
00:04:06,331 --> 00:04:08,831
each of the proposed clusters.

58
00:04:08,855 --> 00:04:15,175
In order to find a hinting word for a cluster,
the Spymaster (hinter) generates a "centroid"

59
00:04:15,199 --> 00:04:19,359
vector for the cluster, to
search real words near by.

60
00:04:19,383 --> 00:04:25,703
An initial "centroid" is proposed as the
Center of Mass of the cluster's vectors

61
00:04:25,727 --> 00:04:32,447
Ideally, the centroid would be close to all
the cluster's words and far from words of

62
00:04:32,471 --> 00:04:38,391
other colors. (where "close" and
"far") are considered in the angle metric.

63
00:04:38,415 --> 00:04:44,895
To optimize the centroid, the nearby words in
the board (from  all colors) are considered

64
00:04:44,919 --> 00:04:50,839
as a physical system, where every
vector from the color of the hinter is an

65
00:04:50,863 --> 00:04:55,423
attractor, and every word
from other colors is a repeller.

66
00:04:55,447 --> 00:05:00,967
The centroid is then being pushed
and pulled by the words of the board

67
00:05:00,991 --> 00:05:06,751
until converging to a point where it
is both far away from bad words, and

68
00:05:06,775 --> 00:05:08,941
close the cluster's words.

69
00:05:08,965 --> 00:05:14,725
The attraction force acts like a
spring, where if the centroid is too far,

70
00:05:14,749 --> 00:05:21,229
the spring can be "torn" apart and is no
longer considered as part of the cluster.

71
00:05:21,253 --> 00:05:26,853
This is done in order to allow
outliers in the cluster to be throwen away.

72
00:05:26,877 --> 00:05:32,077
After convergence, all there
needs to be done is to pick up a word

73
00:05:32,101 --> 00:05:35,301
near-by the optimized
cluster's centroid.

74
00:05:35,325 --> 00:05:40,045
The top n words with the lowest
cosine distance are examined

75
00:05:40,069 --> 00:05:43,909
and the best one is
chosen as the cluster's hint

76
00:05:43,933 --> 00:05:49,053
The best hint from all clusters
is picked and being hinted to the

77
00:05:49,077 --> 00:05:51,661
Field Operators (the guessers).

78
00:05:51,685 --> 00:05:53,285
Part 4: Examples

79
00:05:53,309 --> 00:05:57,789
Here is an example of a well
hinted word by the algorithm

80
00:05:57,813 --> 00:06:03,093
On the X-axis, lay the unrevealed
cards, when the Spymaster hinted:

81
00:06:03,117 --> 00:06:04,797
"redevelopment, 2 cards".

82
00:06:04,821 --> 00:06:09,941
On the Y-axis, you can see the
cosine distance between the hinted

83
00:06:09,965 --> 00:06:13,085
word "redevelopment" and the unrevealed cards.

84
00:06:13,109 --> 00:06:18,549
as can be seen when the Field
Operators search for the closest words

85
00:06:18,573 --> 00:06:24,013
to "redevelopment", "park" and "skyscrapper"
are significantly closer then the

86
00:06:24,037 --> 00:06:27,717
other cards, and thus those
will be his two guesses.

87
00:06:27,741 --> 00:06:31,581
Here is another example
of a less successful hint

88
00:06:31,605 --> 00:06:35,605
As can be seen, the word
"frog" is close to

89
00:06:35,629 --> 00:06:39,469
the hint "rhino", almost as
the desired word "parrot"

90
00:06:39,493 --> 00:06:43,813
This might confuse the
guesser, and thus this hint will

91
00:06:43,837 --> 00:06:45,837
not be picked.

92
00:06:45,861 --> 00:06:47,861
Thanks for wathing!
