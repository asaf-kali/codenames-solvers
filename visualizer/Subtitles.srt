1
00:00:00,651 --> 00:00:05,611
This is an explanation video for
an Algorithm to play the board

2
00:00:05,635 --> 00:00:09,635
game "Codenames", written
by Michael and Asaf Kali.

3
00:00:09,659 --> 00:00:12,325
Part 1: The board game Codenames

4
00:00:12,349 --> 00:00:15,469
Let's first describe the Codenames game

5
00:00:15,493 --> 00:00:21,093
In the game, two groups are competing
- The blue team and the red team

6
00:00:21,117 --> 00:00:26,397
In each group there are two types
of players :The spymaster and the

7
00:00:26,421 --> 00:00:31,061
field operatives, which are often played
by multiple people

8
00:00:33,085 --> 00:00:36,845
On the board there are
25 cards, each one with a

9
00:00:36,869 --> 00:00:38,549
word witten on in.

10
00:00:38,685 --> 00:00:43,725
Some cards represent blue agents,
and some represent red agents.

11
00:00:44,069 --> 00:00:49,909
 one represents an assassin, and the
others represent innocent bystanders.

12
00:00:49,933 --> 00:00:54,493
but only the two Spymasters
holds the map that tells which

13
00:00:54,517 --> 00:00:57,101
card is assigned to which team.

14
00:00:57,125 --> 00:01:02,965
The goal of the Spymasters is to
have all the cards of their color exposed

15
00:01:02,989 --> 00:01:08,909
to do so, in each turn the spymaster
chooses some of the cards of his color

16
00:01:08,933 --> 00:01:10,333
to hint about.

17
00:01:10,357 --> 00:01:15,397
He then hint about them with a
single word, that somehow relates

18
00:01:15,421 --> 00:01:20,541
to each of them, and with the
number of cards he is hinting about

19
00:01:20,565 --> 00:01:26,565
Then, the field operatives guesses which
cards did the Spymaster hinted about.

20
00:01:26,589 --> 00:01:31,469
with each guess, The true color
of the card is being revealed.

21
00:01:31,493 --> 00:01:35,493
Even when the Field
Operators guess a card from the

22
00:01:35,517 --> 00:01:39,757
correct color, the Spymaster
may not give away if that

23
00:01:39,781 --> 00:01:42,681
was the card he hinted about or not.

24
00:01:42,993 --> 00:01:47,073
The spymaster can try to
hint at many cards at once, but

25
00:01:47,097 --> 00:01:51,337
if the Field Operators accidentally
choose a card from the

26
00:01:51,361 --> 00:01:54,801
opponent’s color or a
Bystander's gray card,

27
00:01:54,825 --> 00:01:56,575
they loose their turn

28
00:01:58,301 --> 00:02:03,661
If they hit the black Assassin’s
card - The team immediately looses.

29
00:02:15,185 --> 00:02:17,351
Part 2: The Word2Vec Model

30
00:02:17,375 --> 00:02:22,175
The Algorithm in discussion
uses a pre-trained Word2Vec model

31
00:02:22,199 --> 00:02:24,699
for it's linguistic knowledge.

32
00:02:24,723 --> 00:02:30,483
The Word2Vec model uses a big text
corpus such as Wikipedia or news sites

33
00:02:30,507 --> 00:02:35,707
to assign each word in the
vocabulary with an n-dimensional vector

34
00:02:35,731 --> 00:02:41,571
The vectors of the various words are
designed such that words that tend to

35
00:02:41,595 --> 00:02:46,955
appear in the same context will
have small angle between them, while

36
00:02:46,979 --> 00:02:51,859
distant, unrelated words will
have a larger angle between them.

37
00:02:56,579 --> 00:02:59,163
Part 3: The Codenames Algorithm

38
00:02:59,187 --> 00:03:02,387
Now we will describe
the algorithm itself

39
00:03:02,411 --> 00:03:06,491
To see the problem from
the algorithm's perspective,

40
00:03:06,515 --> 00:03:10,435
We will visualize the cards
words as 3 dimensional

41
00:03:10,459 --> 00:03:12,459
unit vectors in a 3-d space.

42
00:03:13,187 --> 00:03:17,507
In each turn, the first task
of the hinter is to find a

43
00:03:17,531 --> 00:03:21,451
proper subset of words
(usually two to four words)

44
00:03:21,475 --> 00:03:23,075
on which to hint

45
00:03:23,099 --> 00:03:26,539
Two methods of clustering
where implemented.

46
00:03:26,563 --> 00:03:32,563
In the first clustering method, the
words are considered as nodes in a graph

47
00:03:32,587 --> 00:03:37,067
with edges weights correlated
to their cosine similarity.

48
00:03:37,091 --> 00:03:43,411
This graph is divided into communities
using the Louvain SNA algorithm, and each

49
00:03:43,435 --> 00:03:48,555
community is taken as an optional
cluster of words to hint about.

50
00:03:48,579 --> 00:03:53,619
The cluster are represented here
as groups of connected vectors.

51
00:03:54,579 --> 00:04:00,579
A second, "greedy" method, simply
iterates over all combinations of words to

52
00:04:00,603 --> 00:04:02,283
choose the best one.

53
00:04:02,307 --> 00:04:07,107
The second task of the hinter
is to choose a hinting word for

54
00:04:07,131 --> 00:04:09,631
each of the proposed clusters.

55
00:04:09,655 --> 00:04:15,975
In order to find a hinting word for a
cluster, the hinter generates a "centroid"

56
00:04:15,999 --> 00:04:20,159
vector for the cluster, to
search real words near by.

57
00:04:20,183 --> 00:04:26,503
An initial "centroid" is proposed as the
Center of Mass of the cluster's vectors

58
00:04:26,527 --> 00:04:33,247
Ideally, the centroid would be close to all
the cluster's words and far from words of

59
00:04:33,271 --> 00:04:39,191
other colors. (where "close" and
"far") are considered in the angle metric.

60
00:04:39,215 --> 00:04:45,695
To optimize the centroid, the words in
the board (from  all colors) are considered

61
00:04:45,719 --> 00:04:51,639
as a physical system, where every
vector from the color of the hinter is an

62
00:04:51,663 --> 00:04:56,223
attractor, and every word
from other colors is a repeller.

63
00:04:56,247 --> 00:05:01,767
The centroid is then being pushed
and pulled by the words of the board

64
00:05:01,791 --> 00:05:07,551
until converging to a point where it
is both far away from bad words, and

65
00:05:07,575 --> 00:05:09,741
close the cluster's words.

66
00:05:09,765 --> 00:05:15,525
The attraction force acts like a
spring, where if the centroid is too far,

67
00:05:15,549 --> 00:05:22,029
the spring can be "torn" apart and is no
longer considered as part of the cluster.

68
00:05:22,053 --> 00:05:27,653
This is done in order to allow
outliers in the cluster to be neglected.

69
00:05:27,677 --> 00:05:32,877
After convergence, all there
needs to be done is to pick up a word

70
00:05:32,901 --> 00:05:36,101
near-by the optimized
cluster's centroid.

71
00:05:36,125 --> 00:05:40,845
The top n words with the lowest
cosine distance are examined

72
00:05:40,869 --> 00:05:44,709
and the best one is
chosen and the cluster's hint

73
00:05:44,733 --> 00:05:49,853
The best hint from all clusters
is picked and being hinted to the

74
00:05:49,877 --> 00:05:52,461
Field Operators (the guessers).

75
00:05:52,485 --> 00:05:54,085
Part 4: Examples

76
00:05:54,109 --> 00:05:58,589
Here is an example of a well
hinted word by the algorithm

77
00:05:58,613 --> 00:06:03,893
On the X-axis, lay the unrevealed
cards, when the Spymaster hinted:

78
00:06:03,917 --> 00:06:05,597
"Planets, 2 cards".

79
00:06:05,621 --> 00:06:10,741
On the Y-axis, you can see the
cosine distance between the hinted

80
00:06:10,765 --> 00:06:13,885
word "Planet" and the unrevealed cards.

81
00:06:13,909 --> 00:06:19,349
as can be seen when the Field
Operator searches for the closest words

82
00:06:19,373 --> 00:06:24,813
to "planets", "earth" and "jupiter"
are significantly closer then the

83
00:06:24,837 --> 00:06:28,517
other cards thus those
will be his two guesses.

